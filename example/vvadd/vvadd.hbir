target {
  tile t[2][2] {
    sp : 1000 bytes
  }
}

config {
  arrange t(rows, cols) as {
    group oneDimGroup: [i in rows*cols] -> [i/cols][i%cols]
  }
}

data {
 equipartition1D A[n] across G[i] =
   i * A.size[0] / G.size[0] : (i+1) * A.size[0] / G.size[0]
}

kernel {
 vvadd (A: int[n], B: int[n]) -> C: int[n]
 -- equipartition1D A, B across oneDimGroup[i] =
      A|i@dram|, B|i@dram| ~> A|i@sp|, B|i@sp|:
        C|i@dram| = A|i@sp| + B|i@sp|;
}

code {
  int n = 100;
  int[n] A, B, C;
  
  A = 1;
  B = 2;
  C = 0;

  print(A); 
  print(B); 

  vvadd(A, B, C);

  print(C);
}
